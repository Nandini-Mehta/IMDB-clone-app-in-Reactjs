{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gnish\\\\OneDrive\\\\Documents\\\\Reacts JS Projects\\\\IMDB Clone app\\\\imdb-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport MovieList from '../components/MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [popularMovies, setPopularMovies] = useState([]);\n  useEffect(() => {\n    fetch('https://api.themoviedb.org/3/movie/toprated?api_key=7b7ae6b8eb96cbea3b6906128bdf23af').then(res => res.json()).then(data => setPopularMovies(data.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {\n      showThumbs: false,\n      autoPlay: true,\n      transitionTime: 3,\n      infiniteLoop: true,\n      showStatus: false,\n      children: popularMovies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        to: `/movie/${movie.id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie_image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: movie ? movie.original_title : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [movie ? movie.release_date : \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rate\",\n              children: [movie ? movie.vote_average : \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-outlined star\",\n                children: \"star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desc\",\n            children: movie ? movie.overview : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"zUywG5AJ7gmgd3dmY0rQazltEqU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","Link","MovieList","Home","popularMovies","setPopularMovies","fetch","then","res","json","data","results","map","movie","textDecoration","color","id","backdrop_path","original_title","release_date","vote_average","overview"],"sources":["C:/Users/Gnish/OneDrive/Documents/Reacts JS Projects/IMDB Clone app/imdb-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.css';\r\nimport MovieList from '../components/MovieList';\r\n\r\nexport default function Home() {\r\n\r\n    const [popularMovies, setPopularMovies] = useState([])\r\n\r\n    useEffect(()=>{\r\n        fetch('https://api.themoviedb.org/3/movie/toprated?api_key=7b7ae6b8eb96cbea3b6906128bdf23af')\r\n        .then(res => res.json())\r\n        .then(data => setPopularMovies(data.results))\r\n    }, [])\r\n  return (\r\n    <div>\r\n        <Carousel showThumbs={false} autoPlay={true} transitionTime={3} infiniteLoop={true} showStatus={false}>\r\n          {\r\n            popularMovies.map((movie)=>(\r\n              <Link style={{textDecoration:'none', color:'white'}} to={`/movie/${movie.id}`} key={movie.id}>\r\n                <div className=\"movie_image\">\r\n                  <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} alt=\"img\" />\r\n                </div>\r\n                <div className=\"image_overlay\">\r\n                  <div className=\"title\">{movie ? movie.original_title: \"\"}</div>\r\n                  <div className=\"date\">\r\n                    {movie ? movie.release_date: \"\"}\r\n                    <span className='rate'>\r\n                      {movie ? movie.vote_average: \"\"}\r\n                      <span className=\"material-symbols-outlined star\">star</span>\r\n                    </span>\r\n                  </div>  \r\n                  <div className=\"desc\">\r\n                    {movie ? movie.overview: \"\"}\r\n                  </div>             \r\n                </div>\r\n              </Link>\r\n            ))\r\n          }\r\n        </Carousel>\r\n        <MovieList />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,uDAAuD;AAC9D,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,eAAe,SAASC,IAAI,GAAG;EAAA;EAE3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAI;IACVQ,KAAK,CAAC,sFAAsF,CAAC,CAC5FC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,gBAAgB,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EACR,oBACE;IAAA,wBACI,QAAC,QAAQ;MAAC,UAAU,EAAE,KAAM;MAAC,QAAQ,EAAE,IAAK;MAAC,cAAc,EAAE,CAAE;MAAC,YAAY,EAAE,IAAK;MAAC,UAAU,EAAE,KAAM;MAAA,UAElGP,aAAa,CAACQ,GAAG,CAAEC,KAAK,iBACtB,QAAC,IAAI;QAAC,KAAK,EAAE;UAACC,cAAc,EAAC,MAAM;UAAEC,KAAK,EAAC;QAAO,CAAE;QAAC,EAAE,EAAG,UAASF,KAAK,CAACG,EAAG,EAAE;QAAA,wBAC5E;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAK,GAAG,EAAG,sCAAqCH,KAAK,IAAIA,KAAK,CAACI,aAAc,EAAE;YAAC,GAAG,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACxF,eACN;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC5B;YAAK,SAAS,EAAC,OAAO;YAAA,UAAEJ,KAAK,GAAGA,KAAK,CAACK,cAAc,GAAE;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO,eAC/D;YAAK,SAAS,EAAC,MAAM;YAAA,WAClBL,KAAK,GAAGA,KAAK,CAACM,YAAY,GAAE,EAAE,eAC/B;cAAM,SAAS,EAAC,MAAM;cAAA,WACnBN,KAAK,GAAGA,KAAK,CAACO,YAAY,GAAE,EAAE,eAC/B;gBAAM,SAAS,EAAC,gCAAgC;gBAAA,UAAC;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA;cAAA;cAAA;cAAA;YAAA,QACvD;UAAA;YAAA;YAAA;YAAA;UAAA,QACH,eACN;YAAK,SAAS,EAAC,MAAM;YAAA,UAClBP,KAAK,GAAGA,KAAK,CAACQ,QAAQ,GAAE;UAAE;YAAA;YAAA;YAAA;UAAA,QACvB;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAAA,GAhB4ER,KAAK,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAkB7F;IAAC;MAAA;MAAA;MAAA;IAAA,QAEK,eACX,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEV;AAAC,GAtCuBb,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}