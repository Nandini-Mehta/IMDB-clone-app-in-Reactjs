{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gnish\\\\OneDrive\\\\Documents\\\\Reacts JS Projects\\\\IMDB Clone app\\\\imdb-app\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport \"./Card.css\";\nimport { Link } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n  let {\n    movie\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n        color: \"black\",\n        highlightColor: \"white\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 300,\n          duration: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${movie.id}`,\n      style: {\n        textDecoration: \"none\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cards_img\",\n          src: `https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards_overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: movie ? movie.original_title : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [movie ? movie.release_date : \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rating\",\n              children: [movie ? movie.vote_average : \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-outlined star\",\n                children: \"star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desc\",\n            children: movie ? movie.overview.slice(0, 118) + \"...\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(Card, \"zJf5nwO3EPGXCRstpCgbBDFVThc=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","Skeleton","SkeletonTheme","Link","Card","movie","isLoading","setIsLoading","setTimeout","id","textDecoration","color","poster_path","original_title","release_date","vote_average","overview","slice"],"sources":["C:/Users/Gnish/OneDrive/Documents/Reacts JS Projects/IMDB Clone app/imdb-app/src/components/Card.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport \"./Card.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Card({movie}) {\r\n  const [isLoading , setIsLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    setTimeout(()=>{\r\n      setIsLoading(false);\r\n    },1500)\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n        {\r\n          isLoading\r\n          ?\r\n          <div className=\"cards\">\r\n            <SkeletonTheme color=\"black\" highlightColor=\"white\">\r\n              <Skeleton height={300} duration={2}/>\r\n            </SkeletonTheme>\r\n          </div>\r\n          :\r\n          <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}} key={movie.id}>\r\n            <div className=\"cards\">\r\n                <img className=\"cards_img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path:\"\"}`} alt=\"\" />\r\n                <div className=\"cards_overlay\">\r\n                    <div className=\"title\">{movie?movie.original_title:\"\"}</div>\r\n                    <div className=\"date\">\r\n                        {movie?movie.release_date:\"\"}\r\n                        <span className=\"rating\">{movie?movie.vote_average:\"\"}\r\n                          <span className=\"material-symbols-outlined star\">star</span>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"desc\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        }\r\n\r\n    </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,QAAQ,IAAIC,aAAa,QAAQ,wBAAwB;AAChE,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAExC,eAAe,SAASC,IAAI,OAAU;EAAA;EAAA,IAAT;IAACC;EAAK,CAAC;EAClC,MAAM,CAACC,SAAS,EAAGC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAI;IACZS,UAAU,CAAC,MAAI;MACbD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UAEMD,SAAS,gBAET;MAAK,SAAS,EAAC,OAAO;MAAA,uBACpB,QAAC,aAAa;QAAC,KAAK,EAAC,OAAO;QAAC,cAAc,EAAC,OAAO;QAAA,uBACjD,QAAC,QAAQ;UAAC,MAAM,EAAE,GAAI;UAAC,QAAQ,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IACvB;MAAA;MAAA;MAAA;IAAA,QACZ,gBAEN,QAAC,IAAI;MAAC,EAAE,EAAG,UAASD,KAAK,CAACI,EAAG,EAAE;MAAC,KAAK,EAAE;QAACC,cAAc,EAAC,MAAM;QAAEC,KAAK,EAAC;MAAO,CAAE;MAAA,uBAC5E;QAAK,SAAS,EAAC,OAAO;QAAA,wBAClB;UAAK,SAAS,EAAC,WAAW;UAAC,GAAG,EAAG,sCAAqCN,KAAK,GAAGA,KAAK,CAACO,WAAW,GAAC,EAAG,EAAE;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eAC/G;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC1B;YAAK,SAAS,EAAC,OAAO;YAAA,UAAEP,KAAK,GAACA,KAAK,CAACQ,cAAc,GAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO,eAC5D;YAAK,SAAS,EAAC,MAAM;YAAA,WAChBR,KAAK,GAACA,KAAK,CAACS,YAAY,GAAC,EAAE,eAC5B;cAAM,SAAS,EAAC,QAAQ;cAAA,WAAET,KAAK,GAACA,KAAK,CAACU,YAAY,GAAC,EAAE,eACnD;gBAAM,SAAS,EAAC,gCAAgC;gBAAA,UAAC;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA;cAAA;cAAA;cAAA;YAAA,QACvD;UAAA;YAAA;YAAA;YAAA;UAAA,QACL,eACN;YAAK,SAAS,EAAC,MAAM;YAAA,UAAEV,KAAK,GAAGA,KAAK,CAACW,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAC,GAAG,CAAC,GAAC,KAAK,GAAG;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAC1E;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ,GAb4EZ,KAAK,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA;EAcvF,iBAGR;AAEP;AAAC,GAvCuBL,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}